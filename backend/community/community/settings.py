"""
Django settings for community project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG') == 'true'

EMAIL_HOST = os.getenv('EMAIL_HOST')

if os.getenv('EMAIL_PORT') != "":
    EMAIL_PORT = int(os.getenv('EMAIL_PORT'))

if os.getenv('EMAIL_HOST_USER') != "":
    EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')

if os.getenv('EMAIL_HOST_PASSWORD') != "":
    EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')

EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS') == 'true'

CELERY_BROKER_URL = os.getenv('CELERY_BROKER_URL')  # redis://localhost:6379'
CELERY_RESULT_BACKEND = os.getenv('CELERY_RESULT_BACKEND')  # redis://localhost:6379'

ALLOWED_HOSTS = ['*']  # Reverse proxy is used to filter out hosts
MEDIA_ROOT = os.getenv('MEDIA_ROOT')

FRONTEND_DOMAIN = os.getenv('FRONTEND_DOMAIN')

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv('DATABASE_ENGINE'),  # 'django.db.backends.sqlite3',
        'NAME': os.getenv('DATABASE_NAME'),  # 'django.db.backends.sqlite3',
        'USER': os.getenv('DATABASE_USER'),  # BASE_DIR / 'db.sqlite3',
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),  # BASE_DIR / 'db.sqlite3',
        'HOST': os.getenv('DATABASE_HOST'),  # BASE_DIR / 'db.sqlite3',
        'PORT': int(os.getenv('DATABASE_PORT')) if os.getenv('DATABASE_PORT') else None,  # BASE_DIR / 'db.sqlite3',
    }
}

# Application definition

AUTH_USER_MODEL = 'accounts.User'

INSTALLED_APPS = [
    'guides.apps.GuidesConfig',
    'accounts.apps.AccountsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_rest_passwordreset',
    'corsheaders',
    'django_extensions',
    'rest_framework_swagger'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True  # For testing and debugging purposes. On production the backend will be put behind a reverse proxy

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ]
}

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Europe/Warsaw'

ROOT_URLCONF = 'community.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'community.wsgi.application'
MEDIA_URL = 'uploads/'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

# FIXME: this is not verified when creating account or changing password
AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
